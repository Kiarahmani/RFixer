test_byteseq_true.txt  -> actually not
test_commaformat_TO.txt
test_date_3_TO.txt
test_email_2_true.txt
test_hex_true.txt -> good
test_ip_2.txt
test_ssn.txt
test_url_false.txt -> this is good


test_ip_2.txt          8351   13053
test_state_true.txt    24674  26438
test_ssn.txt           1615   2481
test_ip_true.txt       395    446


note for could running:

23lm (updated) mode2    mode2base
7312 (updated) mode2inc mode1base
hs2b           mode2    tutor2base 921-1000
l24q                    tutor2base 940-1030
m6xn           mode1    tutor2base 1950-2040
rq8j                    tutor2base >2040



max-sat?
example 2 edits?
algorithm?
table?

add
expand
reduce


fix 4.3 template expansion 


abstract into numbers
sec 2 number sec 3 example
Synthesis Algorithm 

4.3 -> template generation

avarage cost of two set of benchmarks

at the end of 6.4, add for non-opt timeout ones, what's the search depth/cost



chenged:
1.template generation example

'test834.txt','test835.txt','test836.txt','test7211.txt','test7213.txt','test7214.txt','test4363.txt','test3686.txt','test2272.txt','test1965.txt','test1425.txt'

t1 reglib
277
3270
4996
58864
18

t2 reglib
319
502
5750
9044
18

t1 tutor
535
6644
908616
11269907
1696

t2 tutor
285
509
413379
738741
1449

only t1 solve
3654
332288
255809
23260208
70

only t1 solve
906
319344
194066
68339754
214

 if the geometric mean over all running time ratio for 

I'm a bit confused, in table 1 for sec 5.2, does "skip" means 1).no need to test/pass without testing, or 2). the test results for expanded template should be the same with its parent, so no need to test again.

it is a bit tricky because we not only consider expansion (for expansion it is fine), 
