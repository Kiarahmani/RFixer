
Given the regular expression:

  ((([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+))

That that should match the strings:

  ✓ (0:14)   113.173.40.255
  ✓ (14:28)  171.132.248.57
  ✓ (28:40)  79.93.28.178

And reject the strings:

  ✗ (40:55)  111.222.333.444
  ✗ (55:70)  299.299.299.299
  ✗ (70:80)  189.57.135
  ✗ (80:93)  14.190.193999
  ✗ (93:102) A.N.D.233
  ✗ (102:112) 0123456789
  ✗ (112:135) _+-.,!@#$%^&*();\/|<>"'
  ✗ (135:140) 12345
  ✗ (140:145) -98.7
  ✗ (145:150) 3.141
  ✗ (150:155) .6180
  ✗ (155:160) 9,000
  ✗ (160:163) +42
  ✗ (163:175) 555.123.4567
  ✗ (175:192) +1-(800)-555-2468

Search through possible transformations:

  Order  |  Cost  Template                  Solution                        
---------|--------------------------------------------------------------------
  1      |  1     (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9]){■})\.(([0-2])*([0-9])+([0-9])+)  unsatisfiable SAT formula       
  2      |  1     (([0-2])*([0-9])+([0-9])+)\.(([0-2])*(■)+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)  unsatisfiable SAT formula       
  3      |  1     (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2]){■}([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)  unsatisfiable SAT formula       
  4      |  1     (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9]){■})\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)  unsatisfiable SAT formula       
  5      |  1     (([0-2])*([0-9]){■}([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)  unsatisfiable SAT formula       
  6      |  1     ((■)*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)  7      |  1     (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.((■)*([0-9])+([0-9])+)  8      |  1     (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.((■)*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)  9      |  1     (([0-2])*([0-9])+([0-9])+)\.(([0-2]){■}([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)  unsatisfiable SAT formula       
  10     |  1     (([0-2])*([0-9])+([0-9])+)■(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)  unsatisfiable SAT formula       
  11     |  1     (([0-2])*([0-9])+(■)+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)  unsatisfiable SAT formula       
  12     |  1     (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9]){■}([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)  unsatisfiable SAT formula       
  13     |  1     (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+(■)+)  (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([578])+)
template: (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9]){■})\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+) size: 27 holes: 2 time: 1.27846ms
template: (([0-2])*([0-9])+(■)+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+) size: 26 holes: 1 time: 0.883801ms
template: (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+(■)+) size: 26 holes: 1 time: 1.453419ms
template: (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2]){■}([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+) size: 27 holes: 2 time: 0.699319ms
template: (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9]){■})\.(([0-2])*([0-9])+([0-9])+) size: 27 holes: 2 time: 2.516326ms
template: (([0-2])*([0-9]){■}([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+) size: 27 holes: 2 time: 0.849613ms
template: (([0-2])*([0-9])+([0-9])+)■(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+) size: 26 holes: 1 time: 0.914349ms
template: (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9]){■}([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+) size: 27 holes: 2 time: 1.058377ms
template: (([0-2])*([0-9])+([0-9])+)\.(([0-2])*(■)+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+) size: 26 holes: 1 time: 1.125279ms
template: (([0-2])*([0-9])+([0-9])+)\.(([0-2]){■}([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+) size: 27 holes: 2 time: 7.164625ms
longest: #mn#(([0-2])*([0-9])+([0-9])+)\.(([0-2]){■}([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)#mn# size: #ms#27#ms# holes: #mh#2#mh# time: #mt#7.164625#mt#ms

Computed in:

  #c#449#c#ms

timeSATSolver time:

  #s#18#s#ms

Finds the following solutions (and the corresponding fitness):

  3    (([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([0-9])+)\.(([0-2])*([0-9])+([578])+)

All done

