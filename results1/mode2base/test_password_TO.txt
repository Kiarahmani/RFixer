
Given the regular expression:

  ([#*0-9a-zA-Z@]){8,15}

That that should match the strings:

  ✓ (0:10)   xy9D29rwer
  ✓ (10:19)  d9vNUNswe
  ✓ (19:27)  gskinner
  ✓ (27:37)  Expression
  ✓ (37:63)  abcdefghijklmnopqrstuvwxyz
  ✓ (63:89)  ABCDEFGHIJKLMNOPQRSTUVWXYZ
  ✓ (89:106) a1#Zv96g@*Yfasd4 
  ✓ (106:115) q@12X*567
  ✓ (115:127) d#67jhgt@erd

And reject the strings:

  ✗ (127:132) awdif
  ✗ (132:137) DxRsf
  ✗ (137:144) 0pAbdef
  ✗ (144:152) 9D29rwer
  ✗ (152:153) r
  ✗ (153:154) 9
  ✗ (154:156) t5
  ✗ (156:159) d9b
  ✗ (159:168) 29gpwerwr
  ✗ (168:176) z8fn5wer
  ✗ (176:186) v9wSnx0wer
  ✗ (186:194) 2nf9bm4d
  ✗ (194:202) 9vNUNswe
  ✗ (202:209) Welcome
  ✗ (209:211) to
  ✗ (211:217) RegExr
  ✗ (217:229) gskinner.com
  ✗ (229:237) 2proudly
  ✗ (237:243) emple!
  ✗ (243:250) matches
  ✗ (250:259) 45matches
  ✗ (259:269) 0123456789
  ✗ (269:292) _+-.,!@#$%^&*();\/|<>"'
  ✗ (292:300) @12X*567
  ✗ (300:315) 1#Zv96g@*Yfasd4
  ✗ (315:326) #67jhgt@erd
  ✗ (326:337) Non-Matches
  ✗ (337:345) $12X*567
  ✗ (345:352) 1#Zv_96
  ✗ (352:364) +678jhgt@erd

Search through possible transformations:

  Order  |  Cost  Template                  Solution                        
---------|--------------------------------------------------------------------
  1      |  1     ([#*0-9a-zA-Z@]){■}       unsatisfiable SAT formula       
  2      |  1     (■){8,15}                 unsatisfiable SAT formula       
  3      |  2     ■                         unsatisfiable SAT formula       
  4      |  2     (■■){8,15}                unsatisfiable SAT formula       
  5      |  2     (■){■}                    unsatisfiable SAT formula       
  6      |  2     ((■|■)){8,15}             unsatisfiable SAT formula       
  7      |  2     ((■){■}){8,15}            unsatisfiable SAT formula       
  8      |  3     ((■|■■)){8,15}          tree is((■|■■)){8,15}
char_ : false
char_#: false
char_*: true
char_1: true
char_2: true
char_4: false
char_5: true
char_6: true
char_7: true
char_9: true
char_@: false
char_A: true
char_B: false
char_C: false
char_D: false
char_E: true
char_F: false
char_G: false
char_H: true
char_I: false
char_J: true
char_K: false
char_L: false
char_M: false
char_N: true
char_O: false
char_P: true
char_Q: true
char_R: false
char_S: false
char_T: false
char_U: false
char_V: true
char_W: true
char_X: true
char_Y: false
char_Z: true
char_a: true
char_b: false
char_c: false
char_d: true
char_e: true
char_f: false
char_g: true
char_h: false
char_i: true
char_j: false
char_k: true
char_l: true
char_m: false
char_n: true
char_o: false
char_p: false
char_q: true
char_r: true
char_s: true
char_t: false
char_u: false
char_v: true
char_w: true
char_x: true
char_y: false
char_z: false
char_ : |char1_ |
char_#: true
char_*: false
char_1: true
char_2: false
char_4: true
char_5: true
char_6: false
char_7: true
char_9: false
char_@: true
char_A: false
char_B: true
char_C: false
char_D: true
char_E: false
char_F: true
char_G: false
char_H: true
char_I: false
char_J: true
char_K: false
char_L: true
char_M: false
char_N: true
char_O: false
char_P: true
char_Q: false
char_R: true
char_S: false
char_T: true
char_U: false
char_V: false
char_W: false
char_X: true
char_Y: true
char_Z: false
char_a: false
char_b: true
char_c: false
char_d: true
char_e: false
char_f: true
char_g: false
char_h: true
char_i: true
char_j: true
char_k: false
char_l: true
char_m: false
char_n: true
char_o: false
char_p: true
char_q: false
char_r: true
char_s: true
char_t: true
char_u: false
char_v: false
char_w: false
char_x: true
char_y: true
char_z: char1_z
char_ : true
char_#: true
char_*: true
char_1: true
char_2: true
char_4: false
char_5: false
char_6: true
char_7: false
char_9: false
char_@: true
char_A: char2_A
char_B: false
char_C: true
char_D: false
char_E: true
char_F: false
char_G: true
char_H: false
char_I: true
char_J: false
char_K: true
char_L: false
char_M: true
char_N: false
char_O: true
char_P: false
char_Q: true
char_R: false
char_S: true
char_T: false
char_U: true
char_V: false
char_W: false
char_X: false
char_Y: true
char_Z: false
char_a: false
char_b: false
char_c: true
char_d: false
char_e: true
char_f: true
char_g: true
char_h: false
char_i: true
char_j: true
char_k: true
char_l: false
char_m: true
char_n: false
char_o: true
char_p: true
char_q: true
char_r: false
char_s: true
char_t: false
char_u: true
char_v: false
char_w: false
char_x: false
char_y: true
char_z: true
template: ■ size: 0 holes: 1 time: 4.329685ms
template: (■■){8,15} size: 1 holes: 2 time: 6.399457ms
template: ((■|■■)){8,15} size: 2 holes: 3 time: 33.732795ms
template: (■){■} size: 1 holes: 3 time: 11.365058ms
template: ([#*0-9a-zA-Z@]){■} size: 2 holes: 2 time: 6.923618ms
template: (■){8,15} size: 1 holes: 1 time: 5.101421ms
template: ((■){■}){8,15} size: 2 holes: 3 time: 290.353916ms
template: ((■|■)){8,15} size: 2 holes: 2 time: 4.980141ms
longest: #mn#((■){■}){8,15}#mn# size: #ms#2#ms# holes: #mh#3#mh# time: #mt#290.353916#mt#ms

Computed in:

  #c#2628#c#ms

timeSATSolver time:

  #s#363#s#ms
